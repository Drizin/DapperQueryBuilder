using System;
using System.Collections.Generic;
using System.Text;

namespace DapperQueryBuilder
{
    /// <summary>
    /// Global options for DapperQueryBuilder
    /// </summary>
    public class DapperQueryBuilderOptions
    {
        /// <summary>
        /// By default your interpolated strings will generate parameters in the SQL statement like @p0, @p1, etc. <br />
        /// If your database does not accept @ you can change for anything else. <br />
        /// Example: if you set as ":parm" you'll get :parm1, :parm2, etc. <br />
        /// This one defines what goes into the query.
        /// </summary>
        public static string AutoGeneratedParameterPrefix { get; set; } = "@p";

        /// <summary>
        /// By default your interpolated strings will generate parameter objects which are passed as p0, p1, etc. <br />
        /// If you need to change it (to match AutoGeneratedParameterPrefix) you can change for anything else. <br />
        /// Example: if you set as "parm" you'll get parm1, parm2, etc. <br />
        /// </summary>
        public static string AutoGeneratedParameterObjectPrefix { get; set; } = "p";


        /// <summary>
        /// If enabled (default is disabled) each added parameter will check if identical parameter (same type and value)
        /// was already added, and if so will reuse the existing parameter.
        /// </summary>
        public static bool ReuseIdenticalParameters { get; set; } = false;

    }
}
